apiVersion: 1
groups:
  - name: AKS Nodes
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: node-notready
        title: "AKS Node NotReady"
        condition: B
        data:
          - refId: A
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: prometheus
            model:
              expr: 'kube_node_status_condition{condition="Ready",status="false"}'
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200
          - refId: B
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: __expr__
            model:
              type: reduce
              expression: A
              reducer: last
              settings:
                mode: replaceNN
                replaceWithValue: 0
              refId: B
          - refId: C
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator:
                    params:
                      - 0
                    type: gt
                  operator:
                    type: and
                  query:
                    params:
                      - C
                  type: query
              refId: C
        noDataState: OK
        execErrState: Alerting
        for: 1m
        annotations:
          summary: "Node {{ $labels.node }} is NotReady"
          description: "Node {{ $labels.node }} has been in NotReady state for more than 1 minute"
        labels:
          severity: critical

  - name: AKS Pod States
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: pod-failure-state
        title: "Pod Failure State (stage/dev only)"
        condition: B
        data:
          - refId: A
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: prometheus
            model:
              expr: |
                (
                  kube_pod_container_status_waiting_reason{reason=~"CrashLoopBackOff|ImagePullBackOff|ErrImagePull|CreateContainerError|StartError|CreateContainerConfigError|InvalidImageName", namespace=~"stage|dev", pod!~"app-stats-ping.*"}
                or
                  kube_pod_container_status_terminated_reason{reason=~"Error|StartError|OOMKilled|ContainerCannotRun", namespace=~"stage|dev", pod!~"app-stats-ping.*"}
                )
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200

          - refId: B
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: __expr__
            model:
              type: reduce
              expression: A
              reducer: last
              settings:
                mode: replaceNN
                replaceWithValue: 0
              refId: B

          - refId: C
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator:
                    params:
                      - 0
                    type: gt
                  operator:
                    type: and
                  query:
                    params:
                      - C
                  type: query
              refId: C

        noDataState: OK
        execErrState: Alerting
        for: 1m

        annotations:
          summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} failure detected"
          description: |
            Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} is failing.
            Reason: {{ $labels.reason }}

        labels:
          severity: warning

  - name: AKS Memory Usage
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: pod-high-memory
        title: "Pod High Memory Usage"
        condition: B
        data:
          - refId: A
            datasourceUid: prometheus
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            model:
              expr: |
                (
                  sum by (namespace, pod) (
                    container_memory_usage_bytes{container!=""}
                  )
                  /
                  sum by (namespace, pod) (
                    container_spec_memory_limit_bytes{container!=""}
                  )
                ) * 100
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200

          - refId: B
            datasourceUid: __expr__
            model:
              type: threshold
              expression: A
              conditions:
                - evaluator:
                    params:
                      - 90
                    type: gt
                  operator:
                    type: and
                  query:
                    params:
                      - B
                  type: query
              refId: B

        noDataState: OK
        execErrState: Alerting
        for: 2m
        annotations:
          summary: "High Memory Usage in Pod {{ $labels.namespace }}/{{ $labels.pod }}"
          description: |
            Pod {{ $labels.namespace }}/{{ $labels.pod }} is using more than 90% of its memory limit.
        labels:
          severity: warning
  
  - name: Azure Cost
    folder: Infrastructure
    interval: 1h
    rules:
      - uid: azure-cost-alert
        title: "Azure Monthly Cost Exceeded"
        condition: B
        data:
          - refId: A
            datasourceUid: azure-monitor
            queryType: ''
            relativeTimeRange:
              from: 300
              to: 0
            model:
              queryType: AzureMonitorMetrics
              resourceType: Microsoft.CostManagement/exports
              metricName: "ActualCost"
              aggregation: Total
              refId: A

          - refId: B
            datasourceUid: __expr__
            model:
              type: threshold
              expression: A
              conditions:
                - evaluator:
                    params:
                      - 10
                    type: gt
                  operator:
                    type: and
                  query:
                    params:
                      - B
                  type: query
              refId: B

        noDataState: OK
        execErrState: Alerting
        for: 5m
        annotations:
          summary: "Monthly Azure Cost Alert"
          description: "Azure costs exceeded $10 this month."
        labels:
          severity: critical
