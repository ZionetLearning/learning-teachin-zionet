apiVersion: 1

groups:
  # =========================
  # AKS (Prometheus)
  # =========================
  - name: AKS Nodes
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: node-notready
        title: "AKS Node NotReady"
        condition: B
        data:
          - refId: A
            datasourceUid: prometheus
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              expr: 'kube_node_status_condition{condition="Ready",status="false"}'
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200
          - refId: B
            datasourceUid: __expr__
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              type: reduce
              expression: A
              reducer: last
              settings: { mode: replaceNN, replaceWithValue: 0 }
              refId: B
          - refId: C
            datasourceUid: __expr__
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [0] }
                  operator: { type: and }
                  query: { params: [C] }
              refId: C
        noDataState: OK
        execErrState: Alerting
        for: 1m
        annotations:
          summary: "Node {{ $labels.node }} is NotReady"
          description: "Node {{ $labels.node }} has been in NotReady state for more than 1 minute"
        labels: { severity: critical }

  - name: AKS Pod States
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: pod-failure-state
        title: "Pod Failure State (stage/dev only)"
        condition: B
        data:
          - refId: A
            datasourceUid: prometheus
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              expr: |
                (
                  kube_pod_container_status_waiting_reason{reason=~"CrashLoopBackOff|ImagePullBackOff|ErrImagePull|CreateContainerError|StartError|CreateContainerConfigError|InvalidImageName", namespace=~"stage|dev", pod!~"app-stats-ping.*"}
                or
                  kube_pod_container_status_terminated_reason{reason=~"Error|StartError|OOMKilled|ContainerCannotRun", namespace=~"stage|dev", pod!~"app-stats-ping.*"}
                )
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200
          - refId: B
            datasourceUid: __expr__
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              type: reduce
              expression: A
              reducer: last
              settings: { mode: replaceNN, replaceWithValue: 0 }
              refId: B
          - refId: C
            datasourceUid: __expr__
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [0] }
                  operator: { type: and }
                  query: { params: [C] }
              refId: C
        noDataState: OK
        execErrState: Alerting
        for: 1m
        annotations:
          summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} failure detected"
          description: |
            Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} is failing.
            Reason: {{ $labels.reason }}
        labels: { severity: warning }

  - name: AKS Memory Usage
    folder: Infrastructure
    interval: 1m
    rules:
      - uid: pod-high-memory
        title: "Pod High Memory Usage"
        condition: B
        data:
          - refId: A
            datasourceUid: prometheus
            queryType: ''
            relativeTimeRange: { from: 300, to: 0 }
            model:
              expr: |
                (
                  sum by (namespace, pod) (container_memory_usage_bytes{container!=""})
                  /
                  sum by (namespace, pod) (container_spec_memory_limit_bytes{container!=""})
                ) * 100
              refId: A
              intervalMs: 1000
              maxDataPoints: 43200
          - refId: B
            datasourceUid: __expr__
            model:
              type: threshold
              expression: A
              conditions:
                - evaluator: { type: gt, params: [90] }
                  operator: { type: and }
                  query: { params: [B] }
              refId: B
        noDataState: OK
        execErrState: Alerting
        for: 2m
        annotations:
          summary: "High Memory Usage in Pod {{ $labels.namespace }}/{{ $labels.pod }}"
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is using more than 90% of its memory limit."
        labels: { severity: warning }

  # =========================
  # Frontend (App Insights via Log Analytics)
  # =========================
  - name: Frontend (App Insights Logs)
    folder: Infrastructure
    interval: 1m
    rules:

      # ---------- student ----------
      - uid: ai-student-failure
        title: "Frontend(student): Failure rate > 5%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }   # 10m lookback
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                workspace: "${LA_WS_STUDENT}"      # Workspace Resource ID
              query: |
                range TimeGenerated from ago(10m) to now() step 1m
                | join kind=leftouter (
                    AppPageViews
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize pv = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | join kind=leftouter (
                    AppExceptions
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize ex = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | extend pv = coalesce(pv, 0), ex = coalesce(ex, 0)
                | extend failureRate = iif(pv == 0, 0.0, 100.0 * todouble(ex) / todouble(pv))
                | project TimeGenerated, failureRate
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [5] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: student }
        annotations: { summary: "High failure rate (student)" }

      - uid: ai-student-5xx
        title: "Frontend(student): 5xx% > 1%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                workspace: "${LA_WS_STUDENT}"
              query: |
                AppDependencies
                | where TimeGenerated > ago(10m)
                | extend code = toint(tolong(resultCode))
                | summarize total = count(), fivexx = countif(code between (500..599)) by bin(TimeGenerated, 1m)
                | extend pct_5xx = iif(total == 0, 0.0, 100.0 * todouble(fivexx) / todouble(total))
                | project TimeGenerated, pct_5xx
                | union (datatable(TimeGenerated: datetime, pct_5xx: real) [])
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [1] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: student }
        annotations: { summary: "5xx rate high (student)" }

      - uid: ai-student-p95
        title: "Frontend(student): p95 > 2000ms"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 1200, to: 0 }   # 20m
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                workspace: "${LA_WS_STUDENT}"
              query: |
                range TimeGenerated from ago(10m) to now() step 2m
                | join kind=leftouter (
                    AppBrowserTimings
                    | where TimeGenerated between (ago(10m) .. now())
                    | extend td = todouble(coalesce(
                        column_ifexists("TotalDuration", real(null)),
                        column_ifexists("totalDuration", real(null)),
                        column_ifexists("Duration",      real(null)),
                        column_ifexists("duration",      real(null))
                      ))
                    | where isnotnull(td)
                    | summarize p95_ms = percentile(td, 95) by bin(TimeGenerated, 2m)
                  ) on TimeGenerated
                | extend p95_ms = coalesce(p95_ms, 0.0)
                | project TimeGenerated, p95_ms
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [2000] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 10m
        noDataState: NoData
        execErrState: Error
        labels: { severity: warning, app: student }
        annotations: { summary: "Slow p95 latency (student)" }

      # ---------- admin ----------
      - uid: ai-admin-failure
        title: "Frontend(admin): Failure rate > 5%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_ADMIN}"
              query: |
                range TimeGenerated from ago(10m) to now() step 1m
                | join kind=leftouter (
                    AppPageViews
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize pv = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | join kind=leftouter (
                    AppExceptions
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize ex = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | extend pv = coalesce(pv, 0), ex = coalesce(ex, 0)
                | extend failureRate = iif(pv == 0, 0.0, 100.0 * todouble(ex) / todouble(pv))
                | project TimeGenerated, failureRate
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [5] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: admin }
        annotations: { summary: "High failure rate (admin)" }

      - uid: ai-admin-5xx
        title: "Frontend(admin): 5xx% > 1%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_ADMIN}"
              query: |
                AppDependencies
                | where TimeGenerated > ago(10m)
                | extend code = toint(tolong(resultCode))
                | summarize total = count(), fivexx = countif(code between (500..599)) by bin(TimeGenerated, 1m)
                | extend pct_5xx = iif(total == 0, 0.0, 100.0 * todouble(fivexx) / todouble(total))
                | project TimeGenerated, pct_5xx
                | union (datatable(TimeGenerated: datetime, pct_5xx: real) [])
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [1] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: admin }
        annotations: { summary: "5xx rate high (admin)" }

      - uid: ai-admin-p95
        title: "Frontend(admin): p95 > 2000ms"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 1200, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_ADMIN}"
              query: |
                range TimeGenerated from ago(10m) to now() step 2m
                | join kind=leftouter (
                    AppBrowserTimings
                    | where TimeGenerated between (ago(10m) .. now())
                    | extend td = todouble(coalesce(
                        column_ifexists("TotalDuration", real(null)),
                        column_ifexists("totalDuration", real(null)),
                        column_ifexists("Duration",      real(null)),
                        column_ifexists("duration",      real(null))
                      ))
                    | where isnotnull(td)
                    | summarize p95_ms = percentile(td, 95) by bin(TimeGenerated, 2m)
                  ) on TimeGenerated
                | extend p95_ms = coalesce(p95_ms, 0.0)
                | project TimeGenerated, p95_ms
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [2000] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 10m
        noDataState: NoData
        execErrState: Error
        labels: { severity: warning, app: admin }
        annotations: { summary: "Slow p95 latency (admin)" }

      # ---------- teacher ----------
      - uid: ai-teacher-failure
        title: "Frontend(teacher): Failure rate > 5%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_TEACHER}"
              query: |
                range TimeGenerated from ago(10m) to now() step 1m
                | join kind=leftouter (
                    AppPageViews
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize pv = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | join kind=leftouter (
                    AppExceptions
                    | where TimeGenerated between (ago(10m) .. now())
                    | summarize ex = count() by bin(TimeGenerated, 1m)
                  ) on TimeGenerated
                | extend pv = coalesce(pv, 0), ex = coalesce(ex, 0)
                | extend failureRate = iif(pv == 0, 0.0, 100.0 * todouble(ex) / todouble(pv))
                | project TimeGenerated, failureRate
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [5] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: teacher }
        annotations: { summary: "High failure rate (teacher)" }

      - uid: ai-teacher-5xx
        title: "Frontend(teacher): 5xx% > 1%"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 600, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_TEACHER}"
              query: |
                AppDependencies
                | where TimeGenerated > ago(10m)
                | extend code = toint(tolong(resultCode))
                | summarize total = count(), fivexx = countif(code between (500..599)) by bin(TimeGenerated, 1m)
                | extend pct_5xx = iif(total == 0, 0.0, 100.0 * todouble(fivexx) / todouble(total))
                | project TimeGenerated, pct_5xx
                | union (datatable(TimeGenerated: datetime, pct_5xx: real) [])
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [1] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 5m
        noDataState: NoData
        execErrState: Error
        labels: { severity: critical, app: teacher }
        annotations: { summary: "5xx rate high (teacher)" }

      - uid: ai-teacher-p95
        title: "Frontend(teacher): p95 > 2000ms"
        condition: C
        data:
          - refId: A
            datasourceUid: azure-monitor
            relativeTimeRange: { from: 1200, to: 0 }
            model:
              queryType: "Azure Log Analytics"
              resultFormat: time_series
              azureLogAnalytics:
                resource: "${LA_WS_TEACHER}"
              query: |
                range TimeGenerated from ago(10m) to now() step 2m
                | join kind=leftouter (
                    AppBrowserTimings
                    | where TimeGenerated between (ago(10m) .. now())
                    | extend td = todouble(coalesce(
                        column_ifexists("TotalDuration", real(null)),
                        column_ifexists("totalDuration", real(null)),
                        column_ifexists("Duration",      real(null)),
                        column_ifexists("duration",      real(null))
                      ))
                    | where isnotnull(td)
                    | summarize p95_ms = percentile(td, 95) by bin(TimeGenerated, 2m)
                  ) on TimeGenerated
                | extend p95_ms = coalesce(p95_ms, 0.0)
                | project TimeGenerated, p95_ms
                | order by TimeGenerated asc
              refId: A
          - refId: B
            datasourceUid: __expr__
            model: { type: reduce, expression: A, reducer: last, settings: { mode: replaceNN, replaceWithValue: 0 } }
          - refId: C
            datasourceUid: __expr__
            model:
              type: threshold
              expression: B
              conditions:
                - evaluator: { type: gt, params: [2000] }
                  operator: { type: and }
                  query: { params: [C] }
        for: 10m
        noDataState: NoData
        execErrState: Error
        labels: { severity: warning, app: teacher }
        annotations: { summary: "Slow p95 latency (teacher)" }