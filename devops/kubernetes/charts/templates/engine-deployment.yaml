apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.engine.name }}
  namespace: {{ include "app.namespace" . }}
  labels:
    {{ .Values.engine.labels.selectorKey }}: {{ .Values.engine.labels.selectorValue }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ .Values.engine.labels.selectorKey }}: {{ .Values.engine.labels.selectorValue }}
  template:
    metadata:
      labels:
        {{ .Values.engine.labels.selectorKey }}: {{ .Values.engine.labels.selectorValue }}
      annotations:
        {{ include "app.dapr.annotations" (dict
            "enabled" .Values.global.dapr.enabled
            "appId"   (.Values.engine.dapr.appId | default .Values.engine.name)
            "appPort" .Values.engine.dapr.appPort
            "config"  (.Values.global.dapr.configName | default "dapr-config")
        ) | nindent 8 }}
        dapr.io/sidecar-cpu-request:  "{{ .Values.global.dapr.sidecar.requests.cpu }}"
        dapr.io/sidecar-memory-request: "{{ .Values.global.dapr.sidecar.requests.memory }}"
        dapr.io/sidecar-cpu-limit:    "{{ .Values.global.dapr.sidecar.limits.cpu }}"
        dapr.io/sidecar-memory-limit: "{{ .Values.global.dapr.sidecar.limits.memory }}"
    spec:
      {{- if .Values.global.imagePullSecret.enabled }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecret.name }}
      {{- end }}
      {{- if and .Values.global.dapr.enabled .Values.initContainers.waitForDapr.enabled }}
      initContainers:
        - name: wait-for-dapr
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args:
            - -c
            - |
              echo "[Engine] Waiting for Dapr system to be ready..."
              
              # Wait for Dapr API to be accessible
              echo "[Engine] Checking Dapr API (dapr-api.dapr-system:80)..."
              until nc -z dapr-api.dapr-system.svc.cluster.local 80; do
                echo "Dapr API not ready, waiting 5s..."
                sleep 5
              done
              
              # Wait for Dapr placement service
              echo "[Engine] Checking Dapr placement (dapr-placement-server.dapr-system:50005)..."
              until nc -z dapr-placement-server.dapr-system.svc.cluster.local 50005; do
                echo "Dapr placement not ready, waiting 5s..."
                sleep 5
              done
              
              echo "âœ… [Engine] Dapr system is ready! Starting engine pod..."
          resources:
            {{- toYaml .Values.initContainers.waitForDapr.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Values.engine.name }}
          image: {{ include "app.image" (dict "name" .Values.engine.image.name "tag" .Values.engine.image.tag "Values" .Values) }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.engine.ports.container }}
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: "{{ .Values.engine.env.ASPNETCORE_URLS }}"
            - name: ServiceBus__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.engine.secrets.serviceBus.name }}
                  key: {{ .Values.engine.secrets.serviceBus.key }}
            - name: AzureOpenAI__Endpoint
              value: "{{ .Values.engine.env.AzureOpenAI__Endpoint }}"
            - name: AzureOpenAI__ApiKey
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.engine.secrets.app.name }}
                  key: {{ .Values.engine.secrets.app.keys.openaiApiKey }}
            - name: AzureOpenAI__DeploymentName
              value: "{{ .Values.engine.env.AzureOpenAI__DeploymentName }}"
            - name: AzureOpenAI__ModelId
              value: "{{ .Values.engine.env.AzureOpenAI__ModelId }}"
            - name: AzureSpeech__SubscriptionKey
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.engine.secrets.app.name }}
                  key: {{ .Values.engine.secrets.app.keys.speechKey }}
            - name: AzureSpeech__Region
              value: "{{ .Values.engine.env.AzureSpeech__Region }}"
            - name: AzureSpeech__DefaultVoice
              value: "{{ .Values.engine.env.AzureSpeech__DefaultVoice }}"
            - name: AzureSpeech__TimeoutSeconds
              value: "{{ .Values.engine.env.AzureSpeech__TimeoutSeconds }}"
          resources:
            {{- toYaml .Values.engine.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.engine.name }}
  namespace: {{ include "app.namespace" . }}
spec:
  type: {{ .Values.engine.service.type }}
  selector:
    {{ .Values.engine.labels.selectorKey }}: {{ .Values.engine.labels.selectorValue }}
  ports:
    - port: {{ .Values.engine.ports.service }}
      targetPort: {{ .Values.engine.ports.container }}
