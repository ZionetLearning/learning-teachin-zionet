# Isolated Jaeger setup in separate namespace
# This can be safely deleted without affecting any other services

---
apiVersion: v1
kind: Namespace
metadata:
  name: observability
  labels:
    name: observability
    purpose: testing-jaeger

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-all-in-one
  namespace: observability
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.60
        ports:
        - containerPort: 16686
          name: ui
        - containerPort: 14268
          name: collector
        - containerPort: 14250
          name: grpc-collector
        - containerPort: 6831
          name: agent-compact
        - containerPort: 6832
          name: agent-binary
        - containerPort: 5778
          name: admin
        - containerPort: 14269
          name: admin-http
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        - name: JAEGER_DISABLED
          value: "false"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        - name: METRICS_BACKEND
          value: "prometheus"
        - name: METRICS_HTTP_ROUTE
          value: "/metrics"
        - name: ADMIN_HTTP_HOST_PORT
          value: ":14269"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-all-in-one
  namespace: observability
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
    monitoring: "true"
spec:
  ports:
  - port: 16686
    targetPort: 16686
    name: ui
  - port: 14268
    targetPort: 14268
    name: collector
  - port: 14250
    targetPort: 14250
    name: grpc-collector
  - port: 6831
    targetPort: 6831
    name: agent-compact
    protocol: UDP
  - port: 6832
    targetPort: 6832
    name: agent-binary
    protocol: UDP
  - port: 5778
    targetPort: 5778
    name: admin
  - port: 14269
    targetPort: 14269
    name: admin-http
  - port: 9411
    targetPort: 9411
    name: zipkin
  selector:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: observability
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: jaeger-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - teachin.westeurope.cloudapp.azure.com
      secretName: teachin-tls
  rules:
  - host: teachin.westeurope.cloudapp.azure.com
    http:
      paths:
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-all-in-one
            port:
              number: 16686
