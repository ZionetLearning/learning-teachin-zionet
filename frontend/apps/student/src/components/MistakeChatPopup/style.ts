import { createUseStyles } from "react-jss";

interface StyleProps {
  isRTL: boolean;
}

export const useStyles = createUseStyles({
  dialog: {
    "& .MuiDialog-paper": {
      position: "fixed",
      right: ({ isRTL }: StyleProps) => (isRTL ? "auto" : 0),
      left: ({ isRTL }: StyleProps) => (isRTL ? 0 : "auto"),
      top: 0,
      bottom: 0,
      margin: 0,
      maxHeight: "100vh",
      height: "100vh",
      width: "450px",
      maxWidth: "90vw",
      borderRadius: 0,
      borderLeft: ({ isRTL }: StyleProps) => (isRTL ? "none" : "1px solid #e1e5e9"),
      borderRight: ({ isRTL }: StyleProps) => (isRTL ? "1px solid #e1e5e9" : "none"),
      "@media (max-width: 768px)": {
        width: "100vw",
        maxWidth: "100vw",
      },
    },
    "& .MuiBackdrop-root": {
      backgroundColor: "rgba(0, 0, 0, 0.3)",
    },
  },
  header: {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    padding: "16px 20px",
    borderBottom: "1px solid #e1e5e9",
    background: "linear-gradient(180deg, #f8f9fa 0%, #ffffff 100%)",
    boxShadow: "0 1px 3px rgba(0, 0, 0, 0.05)",
    minHeight: "64px",
  },
  title: {
    fontWeight: 600,
    color: "#1a1a1a",
    fontSize: "18px",
  },
  closeButton: {
    padding: 8,
    color: "#666",
    "&:hover": {
      backgroundColor: "rgba(0, 0, 0, 0.04)",
      color: "#333",
    },
  },
  content: {
    padding: "0 !important",
    display: "flex",
    flexDirection: "column",
    height: "calc(100vh - 64px)",
    overflow: "hidden",
  },
  messagesContainer: {
    flex: 1,
    padding: "20px",
    overflowY: "auto",
    overflowX: "hidden",
    display: "flex",
    flexDirection: "column",
    gap: 16,
    backgroundColor: "#fafbfc",
    minHeight: 0,
  },
  message: {
    maxWidth: "85%",
    padding: "12px 16px",
    borderRadius: 12,
    position: "relative",
    wordWrap: "break-word",
    boxShadow: "0 1px 2px rgba(0, 0, 0, 0.08)",
    direction: ({ isRTL }: StyleProps) => (isRTL ? "rtl" : "ltr"),
  },
  userMessage: {
    alignSelf: ({ isRTL }: StyleProps) => (isRTL ? "flex-start" : "flex-end"),
    backgroundColor: "#007aff",
    color: "white",
    borderBottomRightRadius: ({ isRTL }: StyleProps) => (isRTL ? 12 : 4),
    borderBottomLeftRadius: ({ isRTL }: StyleProps) => (isRTL ? 4 : 12),
  },
  botMessage: {
    alignSelf: ({ isRTL }: StyleProps) => (isRTL ? "flex-end" : "flex-start"),
    backgroundColor: "#ffffff",
    color: "#333",
    borderBottomLeftRadius: ({ isRTL }: StyleProps) => (isRTL ? 12 : 4),
    borderBottomRightRadius: ({ isRTL }: StyleProps) => (isRTL ? 4 : 12),
    border: "1px solid #e1e5e9",
  },
  messageText: {
    margin: 0,
    lineHeight: 1.6,
    fontSize: "14px",
    whiteSpace: "pre-wrap",
  },
  typingIndicator: {
    display: "flex",
    alignItems: "center",
    marginTop: 8,
    gap: 8,
  },
  loadingContainer: {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    padding: 40,
    gap: 16,
  },
  loadingText: {
    color: "#666",
    textAlign: "center",
    fontSize: "14px",
  },
  inputContainer: {
    borderTop: "1px solid #e1e5e9",
    padding: "16px 20px",
    backgroundColor: "#ffffff",
    boxShadow: "0 -2px 8px rgba(0, 0, 0, 0.05)",
  },
  inputWrapper: {
    display: "flex",
    alignItems: "flex-end",
    gap: 8,
    backgroundColor: "white",
    borderRadius: 24,
    padding: "8px 12px",
    border: "2px solid #e1e5e9",
    transition: "border-color 0.2s",
    direction: ({ isRTL }: StyleProps) => (isRTL ? "rtl" : "ltr"),
    "&:focus-within": {
      borderColor: "#007aff",
      boxShadow: "0 0 0 3px rgba(0, 122, 255, 0.1)",
    },
  },
  input: {
    flex: 1,
    border: "none",
    outline: "none",
    fontSize: 14,
    padding: "8px 4px",
    backgroundColor: "transparent",
    color: "#333",
    resize: "none",
    minHeight: "20px",
    maxHeight: "120px",
    lineHeight: "20px",
    fontFamily: "inherit",
    "&::placeholder": {
      color: "#999",
    },
  },
  sendButton: {
    backgroundColor: "#007aff",
    color: "white",
    border: "none",
    borderRadius: 20,
    padding: "8px 20px",
    fontSize: 14,
    fontWeight: 600,
    cursor: "pointer",
    transition: "all 0.2s",
    whiteSpace: "nowrap",
    "&:hover:not(:disabled)": {
      backgroundColor: "#0056b3",
      transform: "translateY(-1px)",
      boxShadow: "0 2px 8px rgba(0, 122, 255, 0.3)",
    },
    "&:active:not(:disabled)": {
      transform: "translateY(0)",
    },
    "&:disabled": {
      backgroundColor: "#ccc",
      cursor: "not-allowed",
      transform: "none",
    },
  },
});