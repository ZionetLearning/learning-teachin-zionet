name: Lock / Unlock Featest (Single Issue)

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Lock or Unlock the featest environment"
        required: true
        type: choice
        options: [lock, unlock]
      locked_by:
        description: "Username who locked the environment (required only for unlock)"
        required: false
        type: string

  workflow_call:
    inputs:
      action:
        required: true
        type: string
      locked_by:
        required: false
        type: string

permissions:
  issues: write

jobs:
  ensure-issue:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.find-issue.outputs.issue_number }}
    steps:
      - name: Ensure lock issue exists
        id: find-issue
        run: |
          REPO=${{ github.repository }}
          ISSUE=$(gh issue list \
            --repo "$REPO" \
            --search "LOCK: featest" \
            --json number \
            --jq '.[0].number' 2>/dev/null || echo "")

          if [ -z "$ISSUE" ]; then
            echo "⚠️ No issue found, creating one..."
            URL=$(gh issue create \
              --repo "$REPO" \
              --title "LOCK: featest" \
              --body "Initial lock issue placeholder")
            ISSUE=$(basename "$URL")
          fi

          echo "issue_number=$ISSUE" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

  check-lock:
    runs-on: ubuntu-latest
    needs: ensure-issue
    outputs:
      locked_by: ${{ steps.check.outputs.locked_by }}
      locked_at: ${{ steps.check.outputs.locked_at }}
      is_locked: ${{ steps.check.outputs.is_locked }}
    steps:
      - name: Check if environment is locked
        id: check
        run: |
          REPO=${{ github.repository }}
          ISSUE=${{ needs.ensure-issue.outputs.issue_number }}

          BODY=$(gh issue view "$ISSUE" --repo "$REPO" --json body -q .body)

          LOCKED_BY=$(echo "$BODY" | grep '^locked_by=' | cut -d'=' -f2 || echo "")
          LOCKED_AT=$(echo "$BODY" | grep '^locked_at=' | cut -d'=' -f2 || echo "")

          IS_LOCKED=$(gh issue view "$ISSUE" --repo "$REPO" --json labels -q '.labels[].name' | grep -q "^locked$" && echo "true" || echo "false")

          echo "locked_by=$LOCKED_BY" >> $GITHUB_OUTPUT
          echo "locked_at=$LOCKED_AT" >> $GITHUB_OUTPUT
          echo "is_locked=$IS_LOCKED" >> $GITHUB_OUTPUT

          if [ "$IS_LOCKED" = "true" ]; then
            echo "🔒 Currently locked by $LOCKED_BY since $LOCKED_AT"
          else
            echo "✅ Environment is not locked – allowed."
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

  manage-lock:
    runs-on: ubuntu-latest
    needs: [ensure-issue, check-lock]
    steps:
      - name: Manage lock state
        run: |
          set -x
          ACTION="$ACTION"
          INPUT_LOCKED_BY="$INPUT_LOCKED_BY"
          CURRENT_LOCKED_BY="$CURRENT_LOCKED_BY"
          IS_LOCKED="$IS_LOCKED"
          USER="$GITHUB_ACTOR"
          REPO="$GITHUB_REPOSITORY"
          ISSUE="$ISSUE"

          if [ "$ACTION" = "lock" ]; then
            if [ "$IS_LOCKED" = "true" ]; then
              if [ "$CURRENT_LOCKED_BY" = "$USER" ]; then
                echo "✅ Environment already locked by $USER. Nothing to do."
                exit 0
              else
                echo "::error::Environment is already locked by $CURRENT_LOCKED_BY. You must unlock it first."
                exit 1
              fi
            fi

            echo "🔒 Locking featest by $USER"
            BODY=$(echo -e "locked_by=$USER\nlocked_at=$(date -u +%Y-%m-%dT%H:%M:%SZ)")
            gh issue edit "$ISSUE" \
              --repo "$REPO" \
              --add-label "locked" \
              --body "$BODY"

          elif [ "$ACTION" = "unlock" ]; then
            if [ "$IS_LOCKED" != "true" ]; then
              echo "::error::Environment is not locked. Nothing to unlock."
              exit 1
            fi

            if [ "$USER" = "$CURRENT_LOCKED_BY" ]; then
              echo "✅ $USER is the locker, unlocking directly."
            else
              if [ -z "$INPUT_LOCKED_BY" ]; then
                echo "::error::You must provide locked_by input when unlocking as a different user."
                exit 1
              fi
              if [ "$INPUT_LOCKED_BY" != "$CURRENT_LOCKED_BY" ]; then
                echo "::error::Unlock denied. Environment is locked by $CURRENT_LOCKED_BY, but you entered $INPUT_LOCKED_BY."
                exit 1
              fi
              echo "✅ Unlock approved: $USER provided correct locker name ($INPUT_LOCKED_BY)."
            fi

            echo "🔓 Unlocking featest by $USER"
            BODY=$(echo -e "Unlocked by $USER\nunlocked_at=$(date -u +%Y-%m-%dT%H:%M:%SZ)")
            gh issue edit "$ISSUE" \
              --repo "$REPO" \
              --remove-label "locked" \
              --body "$BODY"
          else
            echo "::error::Unknown action: $ACTION"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
          ACTION: ${{ inputs.action || github.event.inputs.action }}
          INPUT_LOCKED_BY: ${{ inputs.locked_by || github.event.inputs.locked_by }}
          CURRENT_LOCKED_BY: ${{ needs.check-lock.outputs.locked_by }}
          IS_LOCKED: ${{ needs.check-lock.outputs.is_locked }}
          ISSUE: ${{ needs.ensure-issue.outputs.issue_number }}