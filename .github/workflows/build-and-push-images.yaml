name: For Full CICD - Build and push images

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      list_services_names:
        required: true
        type: string
    outputs:
      image_tag:
        description: "The generated image tag (commit hash)"
        value: ${{ jobs.generate_tag.outputs.image_tag }}

jobs:
  generate_tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Set image tag
        id: set-tag
        run: |
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA="${SHORT_SHA:0:7}"
          echo "image_tag=${SHORT_SHA}" >> $GITHUB_OUTPUT

  build_and_push:
    needs: generate_tag
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        service:
          - name: accessor
            context: backend/ContainerApp/Accessor
            dockerfile: backend/ContainerApp/Accessor/Dockerfile
          - name: manager
            context: backend/ContainerApp/Manager
            dockerfile: backend/ContainerApp/Manager/Dockerfile
          - name: engine
            context: backend/ContainerApp/Engine
            dockerfile: backend/ContainerApp/Engine/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set image tags
        id: imgtag
        shell: bash
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_SHA: ${{ github.sha }}
          ENV_TAG: ${{ inputs.environment_name }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          IMAGE_NAME="${DOCKERHUB_USERNAME}/${{ matrix.service.name }}"
          
          # Extract first 7 characters of commit SHA
          SHORT_SHA="${GITHUB_SHA:0:7}"
          
          # Start building tags output
          {
            echo "tags<<EOF"
            # Add latest tag only for push events
            if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
              echo "${IMAGE_NAME}:latest"
            fi
            # Always add these two tags
            echo "${IMAGE_NAME}:${SHORT_SHA}"
            echo "${IMAGE_NAME}:${ENV_TAG}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ steps.imgtag.outputs.tags }}